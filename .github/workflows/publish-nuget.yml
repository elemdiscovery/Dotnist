name: Build and Publish NuGet Packages

# Configurable Variables (set as GitHub Repository Variables):
# - NUGET_FEED_URL: NuGet feed URL (e.g., https://api.nuget.org/v3/index.json for NuGet.org)
#
# Required Secrets:
# - GITHUB_TOKEN: Automatically provided by GitHub Actions
# - NUGET_GALLERY_KEY: NuGet API key for publishing packages
#
# GitHub Packages automatically uses the current repository's package registry

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion to work properly
      
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.11
      with:
        versionSpec: '6.0.x'
      
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v3.1.11
      with:
        configFilePath: GitVersion.yml
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build projects
      run: dotnet build --no-restore --configuration Release
      
    - name: Pack Dotnist.Client
      run: |
        dotnet pack Dotnist.Client/Dotnist.Client.csproj \
          --no-build \
          --configuration Release \
          --output ./nupkgs \
          -p:Version=${{ steps.gitversion.outputs.semVer }} \
          -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} \
          -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} \
          -p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
          
    - name: Pack Dotnist
      run: |
        dotnet pack Dotnist/Dotnist.csproj \
          --no-build \
          --configuration Release \
          --output ./nupkgs \
          -p:Version=${{ steps.gitversion.outputs.semVer }} \
          -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} \
          -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} \
          -p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
          
    - name: List generated packages
      run: ls -la ./nupkgs/
      
    - name: Upload packages
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./nupkgs/*.nupkg
        retention-days: 1
        
  publish-github:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    
    steps:
    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./nupkgs
        
    - name: Publish to GitHub Packages
      run: |
        dotnet nuget push ./nupkgs/*.nupkg \
          --api-key ${{ secrets.GITHUB_TOKEN }} \
          --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json \
          --skip-duplicate
          
  publish-nuget:
    needs: build
    runs-on: ubuntu-latest
    if: vars.NUGET_FEED_URL != ''
    env:
      NUGET_API_KEY: ${{ secrets.NUGET_GALLERY_KEY }}
    steps:
    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./nupkgs
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Publish to NuGet Feed
      run: |
        dotnet nuget push ./nupkgs/*.nupkg \
          --api-key ${{ secrets.NUGET_GALLERY_KEY }} \
          --source ${{ vars.NUGET_FEED_URL }} \
          --skip-duplicate 